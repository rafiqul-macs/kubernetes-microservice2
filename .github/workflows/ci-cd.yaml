name: Build and Deploy to GKE

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: kubernetes-assignment-cluster
  GKE_ZONE: us-central1-a
  IMAGE_NAME: microservice1  # Change to microservice2 for the second repo
  REGISTRY_PREFIX: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/kubernetes-assignment

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Updated authentication step
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    # Install GKE auth plugin
    - name: Install GKE Auth Plugin
      run: |
        echo "Installing GKE auth plugin..."
        gcloud components install gke-gcloud-auth-plugin
        gcloud components update

    # Configure Docker to use gcloud as a credential helper
    - name: Auth Docker
      run: |
        gcloud auth configure-docker us-central1-docker.pkg.dev

    # Get the GKE credentials
    - name: Set up GKE credentials
      run: |
        gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }}

    # Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t ${{ env.REGISTRY_PREFIX }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker build -t ${{ env.REGISTRY_PREFIX }}/${{ env.IMAGE_NAME }}:latest .

    # Push the Docker image to Google Artifact Registry
    - name: Push Docker image
      run: |
        docker push ${{ env.REGISTRY_PREFIX }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.REGISTRY_PREFIX }}/${{ env.IMAGE_NAME }}:latest

    # Deploy the Docker image to the GKE cluster
    - name: Deploy to GKE
      run: |
        export USE_GKE_GCLOUD_AUTH_PLUGIN=True
        kubectl set image deployment/${{ env.IMAGE_NAME }} ${{ env.IMAGE_NAME }}=${{ env.REGISTRY_PREFIX }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        kubectl rollout status deployment/${{ env.IMAGE_NAME }}