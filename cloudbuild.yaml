steps:
# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/${PROJECT_ID}/kubernetes-assignment/microservice2:${SHORT_SHA}', '.']

# Push the container image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/${PROJECT_ID}/kubernetes-assignment/microservice2:${SHORT_SHA}']

# Update the deployment to use the new image
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'image'
  - 'deployment/microservice2'
  - 'microservice2=us-central1-docker.pkg.dev/${PROJECT_ID}/kubernetes-assignment/microservice2:${SHORT_SHA}'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=kubernetes-assignment-cluster'

# Verify that the new pods are running properly
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'rollout'
  - 'status'
  - 'deployment/microservice2'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=kubernetes-assignment-cluster'

images:
- 'us-central1-docker.pkg.dev/${PROJECT_ID}/kubernetes-assignment/microservice2:${SHORT_SHA}'